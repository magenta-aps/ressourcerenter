version: "3.4"
services:
  ressourcerenter-web:
    container_name: ressourcerenter
    image: ressourcerenter:latest
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    env_file:
      - ./dev-environment/ressourcerenter.env
    volumes:
      - ./ressourcerenter/:/app
      - ./data/:/srv/media
    command: gunicorn --bind=0.0.0.0:8000 project.wsgi:application --reload --workers=1 --access-logfile - --error-logfile - --capture-output

  postgres:
    container_name: ressourcerenter-db
    image: postgres:13
    ports:
      # expose to localhost for easier debugging
      - "5432:5432"
    env_file:
      - ./dev-environment/ressourcerenter.env
    volumes:
      - ressourcerenter-postgres-data:/var/lib/postgresql/data

  ressourcerenter-cron:
    container_name: ressourcerenter-cron
    image: ressourcerenter:latest
    depends_on:
      - postgres
    env_file:
      - ./dev-environment/ressourcerenter.env
    volumes:
      - ./ressourcerenter/:/app
      - ./data/:/srv/media
      - ./dev-environment/crontab:/crontab
    entrypoint: [ ]
    command: [ "supercronic", "/crontab" ]

volumes:
  ressourcerenter-postgres-data:
