stages:
  - lint
  - build
  - test

variables:
  # Project variables
  RELEASE_REGISTRY: docker.io
  RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/ressourcerenter

  RESSOURCERENTER_IMAGE_SHA: ${CI_REGISTRY_IMAGE}/ressourcerenter:${CI_COMMIT_SHA}
  RESSOURCERENTER_IMAGE_DEV: ${CI_REGISTRY_IMAGE}/ressourcerenter:dev
  RESSOURCERENTER_IMAGE_TAG: magentaaps/ressourcerenter:${CI_COMMIT_TAG}-ressourcerenter


# Lint stage
#############
.lint-default: &lint-default
  stage: lint
  needs: []
  image: python:3.8
  tags:
    - docker

Lint Python:
  <<: *lint-default
  before_script:
    - pip3 install flake8
  script:
    - flake8 --ignore E501,E226 ressourcerenter

Lint Dockerfiles:
  <<: *lint-default
  image: hadolint/hadolint:latest-debian
  script:
    - hadolint $CI_PROJECT_DIR/docker/Dockerfile

# Build stage
#############

Build ressourcerenter image:
  stage: build
  needs: []
  dependencies: []
  image:
    name: gcr.io/kaniko-project/executor:debug-v0.16.0
    entrypoint: [""]
  tags:
    - docker
  script:
    # Login to GitLab registry
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/Dockerfile
      --destination=${RESSOURCERENTER_IMAGE_SHA}

# Test stage
############
.test-default: &test-default
  stage: test
  dependencies: []
  tags:
    - docker

Ressourcerenter Unittest:
  <<: *test-default
  needs: ["Build ressourcerenter image"]
  image: ${RESSOURCERENTER_IMAGE_SHA}
  services:
   - name: postgres:13
     alias: ressourcerenter-db
  variables:
    DJANGO_SECRET_KEY: e$s6@0(hs5ja79-&!l7vt^onoe4h^*bv_e4hj&wt5^8*&x76-$
    DJANGO_TIMEZONE: Europe/Copenhagen
    DJANGO_ADMIN_GROUP: admins
    POSTGRES_USER: ressourcerenter
    POSTGRES_PASSWORD: ressourcerenter
    POSTGRES_DB: ressourcerenter
    POSTGRES_HOST: ressourcerenter-db
    # Simulate development environment while running tests so we use mockup data
    ENVIRONMENT: development
  script:
    - cd /app && python manage.py test
